*** Settings ***
Library           OperatingSystem
Library           String
Resource          R_CSV读写操作.txt
Library           RequestsLibrary


*** Variables ***
${base_path}      ~/Desktop/qita/
${file}           ~/Desktop/qita/mobileAndUserid.txt

*** Test Cases ***
读取文件
    ${rule_data}    get file    ./rule_data.json
    log    ${rule_data}
    ${data}    to json    ${rule_data}
    ${name}    get from dictionary    ${data}    name
    Set To Dictionary    ${data}    name="自动化测试"
    remove_from_dictionary    ${data}    zhushi
    ${name}    get from dictionary    ${data}    name
    ${rulesAreas}    get from dictionary    ${data}    rulesAreas
    ${rulesAreas0}    get from list    ${rulesAreas}    0
    ${rulesAreas0_name}    get from dictionary    ${rulesAreas0}    name
    log    ${data}
    #字典  没有 encode 属性
    # ${data}    evaluate    str(${data}.decode("UTF-8"))
    ${data}    evaluate    str(${data}).decode("UTF-8")
    log    ${data}
    ${data}    evaluate    str(${data}).encode("UTF-8")
    ${data}    to json    ${data}
    ${name}    get from dictionary    ${data}    name
    log    ${data}


编码转换
    #参考  http://python.jobbole.com/81244/
    #python 在内部使用两个字节来存储一个unicode，使用unicode对象而不是str的好处，就是unicode方便于跨平台。
    ${s}    set Variable    "人生苦短"
    # ： s是一个utf-8格式的字节串
    log    ${s}     #在 robot 中 ${s}='"人生苦短"'   ,在python 中  s='人生苦短'
    ${u}    evaluate     ${s}.decode("UTF-8")    # "人生苦短"  在python 中被识别为字符串
    # ： s被解码为unicode对象，赋给u
    log    ${u}
    # ${sg}    evaluate    ${u}.encode("gbk")     #'人生苦短.encode("gbk")' failed: SyntaxError: invalid syntax (<string>, line 1)
    # ： u被编码为gbk格式的字节串，赋给sg    ,robot 中 参数传递 跟python 还是有区别？
    # log    ${sg}
    # ${u2}    evaluate     ${s}.encode("UTF-8")    #UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)
    # log    ${u2}
    # ${u3}    evaluate    str(${u})     #SyntaxError: invalid syntax (<string>, line 1)
    # log    ${u3}
    # ${u4}    evaluate     ${s}.decode('ascii')     #'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)
    # log    ${u4}
    # ${u5}    evaluate     ${u4}.encode("UTF-8")
    # log    ${u5}
    ${u6}    evaluate     ${s}.decode('ascii').encode("UTF-8")
    log    ${u6}


编码转换2
    ${s}    set Variable    人生苦短     #  人生苦短  在robot 中 自动识别为字符串
    # ： s是一个utf-8格式的字节串
    log    ${s}
    ${u}    evaluate     ${s}.decode("UTF-8")    #  人生苦短  在 python 中不能被识别为字符串，会报语法错误
    # ： s被解码为unicode对象，赋给u
    log    ${u}
    ${sg}    evaluate    ${u}.encode("gbk")     #'人生苦短.encode("gbk")' failed: SyntaxError: invalid syntax (<string>, line 1)
    # ： u被编码为gbk格式的字节串，赋给sg    ,robot 中 参数传递 跟python 还是有区别？
    log    ${sg}





